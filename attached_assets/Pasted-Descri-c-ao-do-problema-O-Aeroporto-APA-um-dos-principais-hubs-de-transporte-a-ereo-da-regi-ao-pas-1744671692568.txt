Descri¸c˜ao do problema
O Aeroporto APA, um dos principais hubs de transporte a´ereo da regi˜ao, passou recentemente para a
administra¸c˜ao de uma empresa privada. Com essa mudan¸ca, a nova gest˜ao busca modernizar as opera¸c˜oes
do aeroporto e tornar sua log´ıstica mais eficiente. Um dos desafios identificados ´e a programa¸c˜ao dos
pousos e decolagens, um fator essencial para evitar atrasos, otimizar o uso das pistas e garantir a seguran¸ca
das opera¸c˜oes.
Para resolver esse problema, vocˆe foi contratado para desenvolver um algoritmo que ajude a programar
os pousos e decolagens de forma otimizada. O objetivo ´e evitar congestionamentos nas pistas, reduzir
os atrasos e garantir que os intervalos de seguran¸ca entre os voos sejam respeitados. Esse intervalo
´e fundamental porque, entre um voo e outro, ´e preciso considerar dois fatores cr´ıticos: o tempo de
taxiamento e a turbulˆencia de esteira.
O tempo de taxiamento refere-se ao deslocamento das aeronaves entre a pista e os port˜oes de embarque ou desembarque. Uma pista n˜ao pode ser liberada para outro voo imediatamente ap´os um pouso ou
decolagem, pois a aeronave anterior precisa de tempo para sair do local com seguran¸ca. Al´em disso, a
turbulˆencia de esteira ocorre quando uma aeronave deixa um rastro de ar turbulento que pode comprometer a estabilidade da pr´oxima, especialmente se for menor e mais leve. Por isso, ´e essencial garantir
um intervalo adequado entre voos consecutivos na mesma pista.
O desafio ´e distribuir os voos entre as pistas dispon´ıveis, garantindo que nenhum fique esperando
mais do que o necess´ario e que as opera¸c˜oes ocorram da maneira mais eficiente poss´ıvel. Sua solu¸c˜ao
ajudar´a a nova administra¸c˜ao a transformar o Aeroporto APA em um modelo de eficiˆencia, melhorando
a experiˆencia dos passageiros e a pontualidade dos voos.
1
Universidade Federal da Para´ıba
Centro de Informatica ´
Disciplina: An´alise e Projeto de Algoritmos
Professor: Lucidio Cabral
Formalmente, o problema pode ser descrito da seguinte forma:
“Seja V o conjunto de voos que devem pousar e decolar de um aeroporto com m pistas.
Cada voo i ∈ V possui um hor´ario ri ≥ 0 a partir do qual a decolagem ou o pouso pode
ser autorizado. Para cada par de voos distintos i, j ∈ V , h´a um tempo obrigat´orio de espera
tij ≥ 0, que deve ser respeitado se o voo j for programado imediatamente ap´os o voo i
na mesma pista. Esse tempo considera restri¸c˜oes operacionais de seguran¸ca relacionadas ao
taxiamento (deslocamento) e turbulˆencia de esteira entre aeronaves. Al´em disso, cada voo
i ∈ V possui uma penalidade por atraso pi ≥ 0, que corresponde ao custo a ser pago por cada
unidade de tempo de atraso em rela¸c˜ao ao tempo de libera¸c˜ao ri
. O objetivo do problema ´e
determinar um escalonamento dos voos nas m pistas do aeroporto de forma a minimizar as
penalidades por atraso, de forma que os tempos de libera¸c˜ao de cada voo sejam respeitados.”
Exemplo de instˆancia e solu¸c˜ao
Para exemplificar o problema, considere uma instˆancia (cen´ario) do aeroporto APA, o qual possui 2 pistas
e 6 voos di´arios como a seguir:
C´odigo voo Itiner´ario r c p
QUICK1 APA → JPA 5 15 55
QUICK2 REC → APA 25 25 90
QUICK3 APA → GRU 15 20 61
QUICK4 GRU → APA 40 30 120
QUICK5 APA → REC 75 15 45
QUICK6 APA → FOR 50 25 50
A matriz t contendo os tempos de espera entre dois voos consecutivos ´e como a seguir:
QUICK1 QUICK2 QUICK3 QUICK4 QUICK5 QUICK6
QUICK1 - 10 15 8 21 15
QUICK2 10 - 10 13 15 20
QUICK3 17 9 - 10 14 8
QUICK4 11 13 12 - 10 10
QUICK5 5 10 15 20 - 12
QUICK6 5 10 15 20 28 -
2
Universidade Federal da Para´ıba
Centro de Informatica ´
Disciplina: An´alise e Projeto de Algoritmos
Professor: Lucidio Cabral
Considerando essa instˆancia, o seguinte planejamento ´e uma solu¸c˜ao vi´avel (n˜ao necessariamente a
´otima) para o problema.
Para calcularmos o valor da solu¸c˜ao acima ´e necess´ario calcular as poss´ıveis multas por atraso de cada
voo usando a seguinte f´ormula:
Multa = Valor Multa por Minuto *(Tempo de in´ıcio do pouso ou decolagem − Tempo de libera¸c˜ao
do voo)
Sendo assim, os valores de multa por voo s˜ao os seguintes:
QUICK1: Multa = 55 ∗ (5 − 5) = 0
QUICK2: Multa = 90 ∗ (30 − 25) = 450
QUICK3: Multa = 61 ∗ (15 − 15) = 0
QUICK4: Multa = 120 ∗ (45 − 40) = 600
QUICK5: Multa = 45 ∗ (75 − 75) = 0
QUICK6: Multa = 50 ∗ (85 − 50) = 1750
Portanto, no exemplo, o valor da solu¸c˜ao ´e 0 + 450 + 0 + 600 + 0 + 1750 = 2800.
Instru¸c˜oes
O projeto deve ser realizado em grupo de 3 integrantes (da mesma turma) e vale 10 pontos, relativos
`a terceira nota da disciplina. Cada grupo deve desenvolver um algoritmo eficiente de busca local (ou metaheur´ıstica) para o problema de otimiza¸c˜ao descrito acima. O c´odigo-fonte pode ser escrito na linguagem
de sua escolha.
Note que o seu programa deve ser capaz de ler um arquivo contendo os dados de uma instˆancia
(cen´ario) do problema e utilizar tais dados como entrada para o algoritmo. O formato de arquivo a ser
utilizado ´e o seguinte:
3
Universidade Federal da Para´ıba
Centro de Informatica ´
Disciplina: An´alise e Projeto de Algoritmos
Professor: Lucidio Cabral
1 numero_de_voos
2 numero_de_pistas
3
4 array r
5 array c
6 array p
7
8 matriz t
A instˆancia utilizada na se¸c˜ao anterior, por exemplo, poderia ser representada pelo seguinte arquivo:
1 6
2 2
3
4 5 25 15 40 75 50
5 15 25 20 30 15 25
6 55 90 61 120 45 50
7
8 0 10 15 8 21 15
9 10 0 10 13 15 20
10 17 9 0 10 14 8
11 11 13 12 0 10 10
12 5 10 15 20 0 12
13 5 10 15 20 28 0
Ao final da execu¸c˜ao, seu c´odigo deve produzir um arquivo de sa´ıda, no seguinte formato, contendo a
melhor solu¸c˜ao encontrada:
1 < valor da solucao >
2 < lista de voos alocados na pista 1>
3 < lista de voos alocados na pista 2>
4 ...
5 < lista de voos alocados na pista m >
Por exemplo, a solu¸c˜ao mostrada na se¸c˜ao anterior geraria o seguinte arquivo de sa´ıda:
1 2800
2 1 2 5
3 3 4 6
Etapas e prazos
Este projeto cont´em os seguintes entreg´aveis:
• Implementa¸c˜ao de ao menos um algoritmo guloso para a gera¸c˜ao de uma solu¸c˜ao vi´avel.
• Implementa¸c˜ao de pelo menos 3 movimentos de vizinhan¸ca.
• Implementa¸c˜ao do algoritmo de busca local chamado VND (Variable Neighborhood Descent).
• Implementa¸c˜ao de uma meta-heur´ıstica (OPCIONAL). Sugest˜oes: GRASP ou ILS.
4
Universidade Federal da Para´ıba
Centro de Informatica ´
Disciplina: An´alise e Projeto de Algoritmos
Professor: Lucidio Cabral
• Resultados computacionais: criar uma tabela que contenha os resultados obtidos pela(s) heur´ıstica(s)
construtiva(s) e pelo VND, e que compare tais resultados com a solu¸c˜ao ´otima de cada instˆancia.
Essa tabela dever´a conter os seguintes dados para cada heur´ıstica construtiva e para o VND:
– M´edia do valor da solu¸c˜ao (em no m´ınimo 10 execu¸c˜oes para cada instˆancia caso exista
algum fator aleat´orio no algoritmo);
– Melhor solu¸c˜ao encontrada;
– M´edia do tempo gasto pelo respectivo algoritmo;
– GAP para a solu¸c˜ao ´otima.
Observa¸c˜ao: Caso decida implementar a meta-heur´ıstica, ´e necess´ario adicionar colunas de resultados para ela na tabela.
• Todas as implementa¸c˜oes devem vir acompanhadas de um arquivo makefile para a compila¸c˜ao.
Tal arquivo deve ser preparado de forma a funcionar em sistemas UNIX.
• Criar uma pasta contendo os arquivos de sa´ıda gerados durante os testes com cada instˆancia. Favor
incluir somente os resultados dos testes finais, com a vers˜ao a ser entregue.
O projeto deve ser entregue at´e as 23:59 do dia 20 de abril de 2025. Devem ser enviados via
SIGAA, o c´odigo-fonte do projeto e um relat´orio em pdf contendo o nome dos integrantes do grupo e a
tabela de resultados computacionais. Note que ´e necess´ario somente uma entrega por grupo e n˜ao ser˜ao
aceitos envios por e-mail ou fora do prazo.
Avalia¸c˜ao
Cada grupo dever´a apresentar presencialmente o projeto em data a ser agendada pelo professor. A nota
do projeto ´e individual e leva em considera¸c˜ao diversos crit´erios, como demonstra¸c˜ao de entendimento
do c´odigo na apresenta¸c˜ao, qualidade do c´odigo, eficiˆencia dos algoritmos implementados, qualidade dos
resultados obtidos, dentre outros. N˜ao apresentar o projeto implica em nota zero.
Dicas
Como calcular o valor da medida GAP: Suponha que desejamos calcular o valor GAP para o
resultado da heur´ıstica construtiva para a instˆancia chamada nome instancia. Supondo que o valor
encontrado pela heur´ıstica para essa instˆancia ´e dado por valorheuristica e o valor ´otimo para essa instˆancia
´e valorotimo, o c´alculo do GAP ´e realizado da seguinte forma:
gap =

valorheuristica − valorotimo
valorotimo 
× 100
Note que o valor do gap ´e dado em percentagem (%) e indica a “distˆancia” da solu¸c˜ao, no caso, da
heur´ıstica construtiva para o valor ´otimo.
5
Universidade Federal da Para´ıba
Centro de Informatica ´
Disciplina: An´alise e Projeto de Algoritmos
Professor: Lucidio Cabral
Para calcular o GAP dos resultados obtidos pelo VND basta substituir valorheuristica pelo valor
encontrado pela VND.
Exemplo de tabela de resultados:
Heur´ıstica construtiva VND
´otimo valor
solu¸c˜ao
tempo gap valor
solu¸c˜ao
tempo gap
instancia1 0.0 0.0 0.0 0.0 0.0 0.0 0.0
instancia2 0.0 0.0 0.0 0.0 0.0 0.0 0.0
instancia3 0.0 0.0 0.0 0.0 0.0 0.0 0.0
instancia4 0.0 0.0 0.0 0.0 0.0 0.0 0.0